#!/bin/zsh

go_to() {
	if [ -d $1 ]; then
		cd $1
	else
		vim $1
	fi
}

update_position() {
	let "current_line = $1"
	if [ $current_line -gt $number_of_lines ]; then
		let "current_line = $number_of_lines"
	elif [ $current_line -lt 1 ]; then
		let "current_line = 1"
	fi

	chosen_line=$(echo $output | sed "${current_line}q;d")
}

move_line() {
	update_position $current_line
	tput cup $current_line
	echo $chosen_line

	update_position $1
	tput rev
	tput cup $current_line
	echo $chosen_line

	tput sgr0
	tput cup $(tput lines)
	tput el
	printf "$(ls -ld $chosen_line)"
}


draw_screen() {
	tput clear
        tput civis

        if [ "$show_hidden" = 1 ]; then
                output=$(ls -a $1 | sed "1,2d")
        else
                output=$(ls)
        fi

        tput bold
        echo $(pwd)
        tput sgr0

        let "current_line = 1"
        let "number_of_lines=$(echo $output | wc -l)"
        echo $output

	move_line $current_line
}

read_keys() {
	draw_screen

	while true; do
		escape_char=$(printf "\u1b")
		read -sk1 key
		if [ $key = $escape_char ]; then
			read -sk2 key
		fi

		case $key in
			'j'|'[B')
				move_line "$current_line + 1"
				;;
			'k'|'[A')
				move_line "$current_line - 1"
				;;
			'g')
				move_line 0
				;;
			'G')
				move_line $number_of_lines
				;;
			'l'|'[C')
				tput clear
				go_to $chosen_line
				draw_screen
				;;
			'h'|'[D')
				tput clear
				go_to '..'
				draw_screen
				;;
			'z')
				((show_hidden ^= 1))
				draw_screen
				;;
			'~')
				cd ~
				draw_screen
				;;
			'q')
				tput clear
				tput rmcup
				return
				;;
		esac
	done
}

fm() {
	tput smcup
	let "show_hidden = 0"
	trap draw_screen WINCH
	read_keys $(pwd)
	if [ $1 ]; then
		pwd > $1
	fi
	tput cnorm
}

fm $1
